name: Test Bot

on:
  workflow_dispatch:

# Prevent parallel runs
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  forecast_job:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up the specified Python version
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Step 3: Install Poetry
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # Step 4: Cache virtual environment
      - name: Cache poetry dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      # Step 5: Ensure lock file is up-to-date
      - name: Update lock file if needed
        run: poetry lock --no-interaction --check || poetry lock --no-interaction

      # Step 6: Install dependencies
      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      # Step 7: Run the bot
      - name: Run bot
        run: poetry run python main.py --mode test_questions
        env:
          METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          NEWSAPI_API_KEY: ${{ secrets.NEWSAPI_API_KEY }}
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}
